plugins {
    id('java')
    id('maven-publish')
    id('com.github.johnrengelman.shadow') version '7.1.2' apply false
    id('io.papermc.paperweight.patcher') version '1.3.8'
}

def paperMavenPublicUrl = 'https://repo.papermc.io/repository/maven-public/'

repositories {
    maven { url = 'https://maven.aliyun.com/repository/public' }
    maven {
        url = paperMavenPublicUrl
        content { onlyForConfigurations(configurations.paperclip.name) }
    }
}

dependencies {
    remapper('net.fabricmc:tiny-remapper:0.8.2:fat')
    decompiler('net.minecraftforge:forgeflower:1.5.605.7')
    paperclip('io.papermc:paperclip:3.0.2')
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }
    
    publishing {
        repositories {
            mavenLocal()
        }
    }
}

subprojects {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.release = 17
    }
    
    tasks.withType(Javadoc) {
        options.encoding = 'UTF-8'
    }
    
    tasks.withType(ProcessResources) {
        filteringCharset = 'UTF-8'
    }

    repositories {
        maven { url = 'https://maven.aliyun.com/repository/public' }
        maven { url = paperMavenPublicUrl }
    }
}

paperweight {
    serverProject.set(project(':nebula-server'))

    remapRepo.set(paperMavenPublicUrl)
    decompileRepo.set(paperMavenPublicUrl)

    usePaperUpstream(providers.gradleProperty('paperRef')) {
        withPaperPatcher { config ->
            config.apiPatchDir.set(layout.projectDirectory.dir('patches/api'))
            config.apiOutputDir.set(layout.projectDirectory.dir('nebula-api'))

            config.serverPatchDir.set(layout.projectDirectory.dir('patches/server'))
            config.serverOutputDir.set(layout.projectDirectory.dir('nebula-server'))
        }
    }
}

println "Paper Version: ${providers.gradleProperty('paperRef').get()}"

/*
tasks.generateDevelopmentBundle {
    apiCoordinates.set('xianxian.mc.nebula:nebula-api')
    mojangApiCoordinates.set('io.papermc.paper:paper-mojangapi')
    libraryRepositories.set(['https://maven.aliyun.com/repository/public', paperMavenPublicUrl])
}

publishing {
    // Publishing dev bundle:
    // ./gradlew publishDevBundlePublicationTo(MavenLocal|MyRepoSnapshotsRepository) -PpublishDevBundle
    if (project.hasProperty('publishDevBundle')) {
        publications.create('devBundle', MavenPublication) {
            artifact(tasks.generateDevelopmentBundle) {
                artifactId = 'dev-bundle'
            }
        }
    }
}
*/
