From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Lovely_xianxian <xyx_dada@outlook.com>
Date: Sat, 6 Aug 2022 12:53:22 +0800
Subject: [PATCH] Inconsistent Entity


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 2acdfb97b56868f804db8bab7348e25191aaccfb..d5a5b161fe47fcc35ff7030ce06c53ddb2c5740c 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -4673,6 +4673,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
 
     @Override
     public boolean shouldBeSaved() {
+        if (inconsistent) return false;
         return this.removalReason != null && !this.removalReason.shouldSave() ? false : (this.isPassenger() ? false : !this.isVehicle() || !this.hasAnyPlayerPassengers()); // Paper - rewrite chunk system - it should check if the entity has ANY player passengers
     }
 
@@ -4758,4 +4759,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         return ((net.minecraft.server.level.ServerChunkCache) level.getChunkSource()).isPositionTicking(this);
     }
     // Paper end
+    // Nebula start - Inconsistent Entity
+    public boolean inconsistent;
+    // Nebula end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index fc0dc8e607cc24020106ea1af92b4421a5f9393d..d3705fd6a32bf9981e3e92f6fe632c1c02daf178 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -1450,4 +1450,15 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         return !this.getHandle().level().noCollision(this.getHandle(), aabb);
     }
     // Paper End - Collision API
+    // Nebula start - Inconsistent Entity
+    @Override
+    public boolean isInconsistent() {
+        return entity.inconsistent;
+    }
+
+    @Override
+    public void setInconsistent(boolean inconsistent) {
+        entity.inconsistent = inconsistent;
+    }
+    // Nebula end
 }
